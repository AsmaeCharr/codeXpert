@font-face {
    font-family: monoid;
    src: url(fonts/Monoid/Monoid-Regular.ttf);
}

:root {
    --pixel-bg: #8c6db4;
    /* ↑ Inner background color */

    --pixel-border: #8c6db4;
    /* ↑ Inner border color */

    --pixel-border-2: #6e41a1;
    /* ↑ Middle border color */

    --pixel-border-3: black;
    /* ↑ Outer border color */

    --pixel: .125rem;
    /* ↑ Pixel size */
}

body {
    background-color: #252525;
}

.game {
    background-color: #5a59a5;
    margin: 3vh auto;
    font-size: 20px;
    text-align: center;
    padding: 30px;
    width: 90%;
    color: #252525;
}

.game--grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr;
    column-gap: 10px;
}

/* .game__statement {
    background-color: #0000004f;
    color: white;
    padding: 30px;
    margin-bottom: 30px;
} */

.game__statement,
.game__expectedOutput,
.game__expectedInput {
    background: var(--pixel-bg);
    margin: 50px;
    padding: 10px;
    box-shadow:

        /* Inner Background Color */
        0 calc(var(--pixel) * -3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
        0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
        0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
        0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
        0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
        0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
        0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
        0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg),

        /* Pixel Border Layer 1 */
        calc(var(--pixel) * -1) 0 0 0 var(--pixel-border),
        var(--pixel) 0 0 0 var(--pixel-border),
        0 calc(var(--pixel) * -2) 0 0 var(--pixel-border),
        0 calc(var(--pixel) * 2) 0 0 var(--pixel-border),
        0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border),
        0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border),
        0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border),
        0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border),
        0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border),
        0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border),
        0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border),
        0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border),

        /* Pixel Border Layer 2 */
        calc(var(--pixel) * -2) 0 0 0 var(--pixel-border-2),
        calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2),
        0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2),
        0 var(--pixel) 0 var(--pixel) var(--pixel-border-2),
        0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2),
        0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2),
        0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
        0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
        0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
        0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
        0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
        0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
        0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
        0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),

        /* Border Layer 3: --pixel-border-3 */
        calc(var(--pixel) * -3) 0 0 0 var(--pixel-border-3),
        calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3),
        0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3),
        0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3),
        0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3),
        0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3),
        0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3),
        0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
        0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
        0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
        0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
        0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
        0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
        0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3),
        0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3);
}


/* ======================================================================================= */

/* Inspirado del css Diner */
h1 {
    font-size: 25px;
}

h2 {
    font-size: small;
}

.editor {
    position: relative;
    text-align: left;
    width: 50%;
    margin: 0 auto;
    border: solid 10px #00000059;
    border-radius: 4px;
    overflow: hidden;
}

.editor * {
    font-family: monospace;
    font-size: 14px;
    line-height: 150%;
    padding: 0;
    margin: 0;
}

.editor .input-header {
    display: flex;
    align-items: center;
    text-align: left;
    padding: 10px 15px;
    background: #ffffff26;
    border-top: solid 1px rgba(255, 255, 255, .05);
    border-bottom: solid 1px rgba(255, 255, 255, .05);
    border-radius: 2px 2px 0 0;
    color: rgba(255, 255, 255, .6);
}


.editor .file-window {
    padding: 10px 10px 10px 46px;
    position: relative;
    min-height: 400px;
}

.editor .js-view {
    background: #efefef;
    color: #AAA;

}

.editor .file-name {
    float: right;
    opacity: .5;
}

.editor .line-numbers {
    position: absolute;
    top: 0;
    left: 0;
    font-family: monospace;
    padding: 10px 10px;
    height: 100%;
    line-height: 150%;
    text-align: right;
}

.js-view .line-numbers {
    color: #888686;
    background: #DDD;
    font-size: 18px;
}


.editor textarea {
    font-family: monoid;
    font-weight: bold;
    letter-spacing: 1px;
    border: none;
    width: calc(100% - 44px);
    background: none;
    max-width: 100%;
    max-height: 300px;
    outline: none;
    line-height: 25px;
    resize: none;
    min-height: 250px;
    padding-left: 20px;
}

.help {
    font-family: monoid;
    padding-bottom: 2px;
    padding-left: 20px;
}

.input-header h1 {
    width: fit-content;
    font-size: larger;
    letter-spacing: 1px;
}



/* ========================================================================================= */

.toggle {
    position: relative;
    float: right;
    margin-left: 80%;
}

.toggle input[type="checkbox"] {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 3;
    width: 100%;
    height: 100%;
    cursor: pointer;
    opacity: 0;
}

.toggle label {
    position: relative;
    display: flex;
    align-items: center;
}

.toggle label:before {
    content: '';
    width: 56px;
    height: 25px;
    position: relative;
    border-radius: 4px;
    border: 2px solid #333;
    background: #DDD;
    display: inline-block;
    transition: 0.25s ease-in;
}

.toggle label:after {
    content: '';
    position: absolute;
    border-radius: 4px;
    background: #333;
    width: 19px;
    height: 19px;
    left: 4px;
    top: 4px;
    bottom: 2px;
    z-index: 2;
    transition: 0.2s ease-in;
}

.toggle input[type="checkbox"]:checked+label:before {
    background: #333;
}

.toggle input[type="checkbox"]:checked+label:after {
    background: #DDD;
    transform: translatex(32px);
}



/* .toggle {
    position: relative;
    box-sizing: border-box;
}

.toggle input[type="checkbox"] {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 10;
    width: 100%;
    height: 100%;
    cursor: pointer;
    opacity: 0;
}

.toggle label {
    position: relative;
    display: flex;
    align-items: center;
    box-sizing: border-box;
}

.toggle label:before {
    content: '';
    width: 70px;
    height: 40px;
    background: #fff;
    border: 2px solid #DDD;
    box-shadow: inset -30px 0 0 #666;
    position: relative;
    display: inline-block;
    border-radius: 20px;
    box-sizing: border-box;
    transition: 0.25s ease-in;
}

.toggle label:after {
    content: '';
    width: 20px;
    height: 20px;
    position: absolute;
    left: 10px;
    top: 10px;
    border-radius: 50%;
    background: #FFF;
    box-shadow: inset -8px -5px #333;
    transition: 0.2s ease-in-out;
}

.toggle input[type="checkbox"]:checked+label:before {
    box-shadow: inset 30px 0 0 #ffeb00;
}

.toggle input[type="checkbox"]:checked+label:after {
    box-shadow: inset 0 0 0 2px #FFF;
    background: #ffbc00;
    left: 39px;
    top: 8px;
    border: 2px dashed #FFF;
} */